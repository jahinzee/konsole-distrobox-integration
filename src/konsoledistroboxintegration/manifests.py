#!/usr/bin/env python3
"""
konsole-distrobox-integration

manifests.py: create, read and manage manifest files.

Author: jahinzee <jahinzee@outlook.com>

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.
"""

__package__ = "konsoledistroboxintegration"

import json
from typing import List
from pathlib import Path
from datetime import datetime

from konsoledistroboxintegration.files import write_file_sparingly
from konsoledistroboxintegration.profiles import Profile


def make_manifest(manifest_path: Path, profiles: List[Profile]) -> None:
    """
    Create a JSON manifest file of generated profiles.

    Args:
        manifest_path (Path): the path of the JSON file to write.
        profiles (List[Profile]): the list of profiles to write.
    """
    data = json.dumps({p.get_root_name(): p.to_dict() for p in profiles}, indent=4)
    write_file_sparingly(
        data,
        manifest_path / ".konsole-distrobox-integration.json",
        ignore_lines=None,
        no_compare=False,
    )


def read_manifest(manifest_path: Path) -> List[Profile]:
    """
    Read a JSON manifest file and returns the profiles.

    Args:
        manifest_path (Path): the path of the JSON file to read.

    Returns:
        List[Profile]: the list of profiles read.
    """
    with open(
        manifest_path / ".konsole-distrobox-integration.json", "r"
    ) as manifest_file:
        data = json.loads(manifest_file.read())
        return [Profile.from_dict(v) for v in data.values()]


def get_gen_comment() -> str:
    """
    VESTIGIAL; returns a comment text for identification and
               timestamping.

    Returns:
        str: the comment text, without any prefixes
             (e.g. "//", "#", etc.).
    """
    current_timestamp = datetime.now().strftime("%d/%m/%Y %H:%M:%S")
    return f"Auto-generated by profile-gen on {current_timestamp}."
